# lint all Dockerfiles in the input directory and output linter output into output directory with same subdirectory structure
# assign bind mounts to /lint-input and /lint-output when running this in a container
# assign user on run to prevent the files from not being deletable by the user running the docker container
# docker run --rm --name hadolint-run -v "$(pwd)"/Dockerfiles:/lint-input -v "$(pwd)"/lint-output:/lint-output --user "$(id -u):$(id -g)" IMAGE_NAME

FROM hadolint/hadolint:v2.4.1-alpine

COPY hadolint-config.yaml /config/

RUN apk --no-cache add bash

ENV OUTPUT_DIRECTORY="configured-hadolint"

SHELL ["/bin/bash", "-c"]
CMD test ! -d /lint-output/$OUTPUT_DIRECTORY && mkdir /lint-output/$OUTPUT_DIRECTORY ; \
    for f in /lint-input/*/*/* ; \
    do \
        SUBDIR_FILE=${f/\/lint-input\/} ; \
        SUBDIRECTORIES=$(cut -d'/' -f 1-2 <<< "$SUBDIR_FILE") ; \
        SUBDIRECTORY=$(cut -d'/' -f 1 <<< "$SUBDIRECTORIES") ; \
        FILENAME=$(cut -d'/' -f 3 <<< "$SUBDIR_FILE") ; \
        test ! -d /lint-output/$OUTPUT_DIRECTORY/$SUBDIRECTORY && mkdir /lint-output/$OUTPUT_DIRECTORY/$SUBDIRECTORY ; \
        test ! -d /lint-output/$OUTPUT_DIRECTORY/$SUBDIRECTORIES && mkdir /lint-output/$OUTPUT_DIRECTORY/$SUBDIRECTORIES ; \
        hadolint --config /config/hadolint-config.yaml "$f" > /lint-output/$OUTPUT_DIRECTORY/$SUBDIRECTORIES/$FILENAME ; \
    done